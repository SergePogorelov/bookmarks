"""
Django settings for bookmarks project.

Generated by 'django-admin startproject' using Django 2.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'vq%h1_yyrad6mo*=8la9)s4395+g&(o@&u=rr2@d7&q&a^!x#f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['mysite.com', 'localhost', '127.0.0.1', '1203c097.ngrok.io']


# Application definition

INSTALLED_APPS = [
    'account.apps.AccountConfig',
    'images.apps.ImagesConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'social_django',
    'sorl.thumbnail',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bookmarks.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bookmarks.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'


LOGIN_REDIRECT_URL = 'dashboard' 
#указывает адрес, куда Django будет перенаправлять
# пользователя при успешной авторизации, если не указан GET-параметр next

LOGIN_URL = 'login'
#адрес, куда нужно перенаправлять пользователя для входа
# в систему, например из обработчиков с декоратором login_required

LOGOUT_URL = 'logout'
# адрес, перейдя по которому, пользователь выйдет из своего
# аккаунта

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# Настройка EMAIL_BACKEND определяет класс, который будет использоваться для
# отправки электронной почты.

#EMAIL_HOST – хост SMTP-сервера; по умолчанию localhost;
#EMAIL_PORT – порт SMTP-сервера; по умолчанию 25;
#EMAIL_HOST_USER – логин пользователя для SMTP-сервера;
#EMAIL_HOST_PASSWORD – пароль пользователя для SMTP-сервера;
#EMAIL_USE_TLS – использовать ли защищенное TLS-подключение;
#EMAIL_USE_SSL – использовать ли скрытое TLS-подключение.

# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_HOST_USER = 'your_account@gmail.com'
# EMAIL_HOST_PASSWORD = 'your_password'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
#разрешить доступ на странице https://myaccount.google.com/lesssecureapps:


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
# MEDIA_URL – это базовый URL, от которого будут формироваться адреса файлов. 
# MEDIA_ROOT – путь в файловой системе, где эти файлы будут храниться. 
# Мы не задаем этот путь явно, а используем BASE_DIR, чтобы наш код был универсальным.


AUTHENTICATION_BACKENDS = [
'django.contrib.auth.backends.ModelBackend',
'account.authentication.EmailAuthBackend',
'social_core.backends.facebook.FacebookOAuth2',
]
SOCIAL_AUTH_FACEBOOK_KEY = '697779374382886' # Facebook App ID
SOCIAL_AUTH_FACEBOOK_SECRET = '3b3c6ce1d2998bcc0dbdfdd79c88bc89' # Facebook App Secret
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']
